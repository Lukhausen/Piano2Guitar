:root {
    --light1: rgb(220, 220, 220);
    --light2: rgb(208, 208, 208);
    --light3: rgb(143, 142, 142);
    --dark1: rgb(57, 57, 57);
    --dark2: rgb(42, 42, 42);
    --dark3: rgb(32, 32, 32);
    --padding: 10px;
    --rounding: 5px;
}



/* width */
::-webkit-scrollbar {
    width: 10px;
}

/* Track */
::-webkit-scrollbar-track {
    background: var(--dark3);
}

/* Handle */
::-webkit-scrollbar-thumb {
    background: var(--dark1);
    border-radius: var(--rounding);
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
    background: var(--light3);
}

svg path {
    fill: var(--light1)
}

html {
    background-color: var(--dark3);
    color: #fff;
    font-size: large;
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100vh;
    font-family: 'Noto Sans', serif;
}


body {
    margin: 0;
    box-shadow: 0 0 10vw rgba(6, 6, 6, 0.552);
    box-sizing: border-box;
    width: 80vw;
}

.inputWrapper {
    display: flex;
    flex-direction: column;
    width: 100%;
    background-color: var(--dark1);
    gap: var(--padding);
    padding: var(--padding);
    box-sizing: border-box;
}

.searchContainer {
    height: 30vh;
    background-color: var(--dark1);
    display: flex;
    flex-direction: row;
    gap: var(--padding);

}



.visualPianoContainer {
    flex: 1.3;
    display: flex;
    flex-direction: row;
    align-items: end;
    padding: calc(var(--padding)/2);
    background-color: var(--dark2);
    border-radius: var(--padding);
    gap: calc(var(--padding)/2)
}

.visualPianoIcon {
    width: max(3vh, 2vw);
    height: auto;
    transition: 0.2s;
}

.visualPianoIcon:hover {
    cursor: pointer;
    transform: scale(1.05);
}

.visualPianoIcon:active {
    cursor: pointer;
    transform: scale(0.8);
}

.pianoContainer {
    position: relative;
    display: flex;
    width: 100%;
    height: 100%;
    box-shadow: 0 2vw 4vw rgba(7, 0, 53, 0.25);
    border:none;
    flex:1;
    border-radius: var(--padding);

}
.pianoIconContainer{
    display: flex;
    flex-direction: column;
    gap: var(--padding);
    padding: calc(var(--padding)/2);
}

.searchWordContainer {
    flex: 1;
    display: flex;
    position: relative;
    height: 100%;
    flex-direction: column;
    background-color: var(--dark2);
    border-radius: var(--padding);
    overflow: hidden;
    /* Hides content that overflows the element's box */


}

.blackFadeBottom {
    height: 100%;
    width: 100%;
    position: absolute;
    border-radius: var(--padding);
    background: linear-gradient(0deg, rgb(31, 31, 31) 0%, rgba(63, 63, 63, 0) 10%, rgba(0, 0, 0, 0) 100%);
    z-index: 3;
    pointer-events: none;

}

.searchBox {
    width: 100%;
    height: auto;
    background-color: var(--dark2);
    box-sizing: border-box;
    border: none;
    font-size: large;
    border-bottom: 2px solid var(--dark1);
    /* Same bottom border on focus */
    padding: calc(var(--padding) / 2) var(--padding);
    /* Padding around text */
    border-radius: var(--rounding) var(--rounding) 0 0;
    color: var(--light1);
}



.searchBox:focus {
    outline: none;
}

.searchChordList {
    display: flex;
    flex-direction: row;
    align-content: flex-start;
    height: 100%;
    gap: var(--padding);
    flex-wrap: wrap;
    box-sizing: border-box;
    padding: var(--padding);
    overflow-y: auto;
    max-height: 30vh;
    user-select: none;
    flex-grow: 0;
}

.selectedItems {
    width: 100%;
    height: auto;
    display: flex;
    flex-direction: row;
    align-content: flex-start;
    justify-content: center;
    gap: var(--padding);
    flex-wrap: wrap;
    box-sizing: border-box;
    padding: var(--padding);
    background-color: var(--dark2);
    border-radius: var(--rounding);
    transition: 1s;
    user-select: none;
    overflow: hidden;
    overflow-x:auto;
    font-size: x-large;

}



.dragDropItem {
    background-color: #fff;
    padding: calc(var(--padding) / 2) var(--padding);
    border-radius: var(--rounding);
    font-weight: 700;
    box-sizing: border-box;
    color: var(--dark2);
    position: relative;
    cursor: pointer;
    transition: 0.2s;
    box-shadow: 0 0 10px #00000056; /* Add a glowing effect */

}
.dragDropItem:hover{
    transform: scale(1.05);
}

.dragDropItem:active{
    transform: scale(0.5) translate(-50);
}

.dragDropItem span {
    position: relative;
    background-color: var(--light2);
    color: var(--dark1);
    border-radius: 0 var(--rounding) var(--rounding) 0;
    margin-left: var(--padding);
    padding: calc(var(--padding) / 2) var(--padding);
    z-index: 2;
    top: 0%;
    left: var(--padding);
    box-shadow: 0 0 10px rgb(6, 6, 6);

}

.dragDropItem.dragging {
    transform: scale(1.05);
    transition: 0.2s;
    opacity: 0.5;
}

.dragDropItem.over {
    transform: scale(0.95);
    transition: 0.2s;
    opacity: 0.5;
}

.selected-dragDropItem{
    box-shadow: 0 0 10px #00000096; /* Add a glowing effect */

}

#DragAndDrop-EmptyMessage {
    opacity: 0.2;
    display: flex;
    gap: var(--padding);
}

.settings {
    background-color: aqua;
}


@media only screen and (max-width: 1200px) {
    .searchContainer {
        flex-direction: column;
        height: 50vh;
    }

    .visualPianoContainer {
        flex: 0.7;
    }

    html{
        font-size:medium;
    }
    body{
        width: 100vw;
    }
}