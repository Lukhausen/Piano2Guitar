:root {
    --light0: rgb(240, 240, 240);
    --light1: rgb(220, 220, 220);
    --light2: rgb(208, 208, 208);
    --light3: rgb(143, 142, 142);
    --dark1: rgb(50, 57, 57);
    --dark2: rgb(35, 42, 42);
    --dark3: rgb(10, 20, 20);
    --accent1: rgb(255, 136, 0);
    --padding: 10px;
    --rounding: 7px;
}





.progressionGeneratorContainer {
    display: flex;
    gap: var(--padding);
    flex-wrap: wrap;
    flex-direction: row;
}



.progressionGeneratorSvgContainer {
    display: flex;
    flex-direction: column;
    align-items: center;

}

.progressionGeneratorSvgContainer svg {
    width: calc(max(10vh, 7vw));
    height: auto;
}




.progressionGeneratorChordSwitchContainer {
    color: var(--light2);
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    margin-right: calc(max(10vh, 7vw)/5);
    font-size: calc(var(--font-size)*1);
}



.progressionGeneratorChordName {
    border-radius: var(--rounding);
    background-color: var(--light1);
    padding: calc(var(--padding)/2) var(--padding);
    font-weight: 800;
    box-sizing: border-box;
    color: var(--dark3);
    box-shadow: 0 0 10px #00000056, inset 0 0 3px #ffffff6e;
    margin-right: calc(max(10vh, 7vw)/5);
}




.progressionGeneratorChordSwitchButton svg path {
    fill: var(--light2);
}

.progressionGeneratorChordSwitchButton {
    display: flex;
    cursor: pointer;
}

.progressionGeneratorChordSwitchButton svg {
    height: calc(max(10vh, 7vw)/8);

}

.progressionGeneratorDiagramsContainer {
    display: flex;
    flex-direction: column;
    gap: var(--padding);
    align-items: center;
    justify-content: center;
}




.progressionGeneratorChordInfoContainer {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
}








.progressionGeneratorImpossibleWrapper {
    position: relative;
}

.progressionGeneratorImpossible {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    filter: drop-shadow(0px 0px 5px #00000076);
    text-align: center;
}







@keyframes slideInRight {
    from {
        transform: translateX(50%);
        filter: blur(1);

        opacity: 0;
    }

    to {
        transform: translateX(0);
        filter: blur(0);

        opacity: 1;
    }
}

@keyframes slideOutLeft {
    from {
        transform: translateX(0);
        filter: blur(0);

        opacity: 1;
    }

    to {
        transform: translateX(-50%);
        filter: blur(1);

        opacity: 0;
    }
}

@keyframes slideInLeft {
    from {
        transform: translateX(-50%);
        filter: blur(1);

        opacity: 0;
    }

    to {
        transform: translateX(0);
        filter: blur(0);

        opacity: 1;
    }
}

@keyframes slideOutRight {
    from {
        transform: translateX(0);
        filter: blur(0);

        opacity: 1;
    }

    to {
        transform: translateX(50%);
        filter: blur(1);
        opacity: 0;
    }
}

.slide-in-right {
    animation: slideInRight 0.1s forwards;
}

.slide-out-left {
    animation: slideOutLeft 0.1s forwards;
}

.slide-in-left {
    animation: slideInLeft 0.1s forwards;
}

.slide-out-right {
    animation: slideOutRight 0.1s forwards;
}


@keyframes vibrate {
    0% {
        transform: translateX(0);
    }

    25% {
        transform: translateX(-2px);
    }

    50% {
        transform: translateX(2px);
    }

    75% {
        transform: translateX(-2px);
    }

    100% {
        transform: translateX(0);
    }
}

.vibrate {
    animation: vibrate 0.2s;
}