.header {
    display: flex;
    justify-content: space-between;
    align-items: start;
    font-size: max(1.6vw, 3vh);
    font-weight: 100;
}

.mainHeader {
    font-weight: 300;
    display: flex;
    flex-direction: row;
    gap: var(--padding);
}

.versionDescription {
    font-size: medium;
    font-weight: 900;
}

.versionInformation {
    font-size: small;
    font-weight: 100;
}


.content {
    margin: 0;
    filter: drop-shadow(0 0 10vw rgba(6, 6, 6, 0.552));
    box-sizing: border-box;
    width: 80vw;

    min-height: 500px;
    display: flex;
    flex-direction: column;
}




#settingsIcon {
    z-index: 10;
    filter: drop-shadow(0px 0px 5px #0000006d);
}

.settingsWrapper {
    display: flex;
    font-size: large;
    font-weight: 500;
    align-items: start;
    justify-content: center;
    gap: var(--padding);
}


.inputWrapper {
    display: flex;
    flex-direction: column;
    width: 100%;
    height: 50vh;
    background-color: var(--dark1);
    gap: var(--padding);
    padding: var(--padding);
    box-sizing: border-box;
    position: relative;
    /*     box-shadow: 0 0 min(5vw, 5vh) rgba(0, 0, 0, 0.212);
 */
    background-color: var(--dark1);
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='4' height='4' viewBox='0 0 4 4'%3E%3Cpath fill='%23575757' fill-opacity='0.4' d='M1 3h1v1H1V3zm2-2h1v1H3V1z'%3E%3C/path%3E%3C/svg%3E");
    border-top-left-radius: var(--rounding);
    border-top-right-radius: var(--rounding);

}


.searchContainer {
    display: flex;
    flex-direction: row;
    gap: var(--padding);
    flex: 1
}



.visualPianoContainer {
    flex: 1.5;
    display: flex;
    flex-direction: row;
    align-items: end;
    padding: calc(var(--padding)/2);
    background-color: var(--dark2);
    border-radius: var(--rounding);
    gap: calc(var(--padding)/2);
    flex-basis: 100px;
    box-shadow: inset 0 0 1vw rgba(0, 0, 0, 0.197);

}

.visualIcon {
    width: max(3vh, 1.5vw);
    height: auto;
    transition: 0.2s;
}

.visualIcon:hover {
    cursor: pointer;
    transform: scale(1.05);
}

.visualIcon:active {
    cursor: pointer;
    transform: scale(0.8);
}

.pianoContainer {
    position: relative;
    display: flex;
    width: 100%;
    height: 100%;
    box-shadow: 0 0 1vw rgba(7, 0, 53, 0.25);
    border: none;
    flex: 1;
    border-radius: var(--rounding);

}

.pianoIconContainer {
    display: flex;
    flex-direction: column;
    gap: var(--padding);
    padding: calc(var(--padding)/2);
    max-height: 100%;
}

.pianoMIDIWrapper {
    display: flex;
    width: 100%;
    height: 100%;
    border: none;
    flex-direction: column;
    gap: calc(var(--padding)/2)
}

#MIDIStatusDiv {
    color: var(--light3);
}

.searchWordContainer {
    flex: 1;
    display: flex;
    position: relative;
    flex-direction: column;
    background-color: var(--dark2);
    border-radius: var(--rounding);
    overflow: hidden;
    /* Hides content that overflows the element's box */


}

.blackFadeBottom {
    width: 100%;
    position: absolute;
    border-radius: var(--rounding);
    background: linear-gradient(0deg, rgb(31, 31, 31) 0%, rgba(63, 63, 63, 0) 10%, rgba(0, 0, 0, 0) 100%);
    z-index: 3;
    pointer-events: none;
    height: 100%;
}

.searchBox {
    width: 100%;
    height: auto;
    background-color: var(--dark2);
    box-sizing: border-box;
    border: none;
    border-bottom: 2px solid var(--dark1);
    /* Same bottom border on focus */
    padding: var(--padding);
    /* Padding around text */
    border-radius: var(--rounding) var(--rounding) 0 0;
    color: var(--light1);
    font-size: large;

}



.searchBox:focus {
    outline: none;
}

.searchChordList {
    display: flex;
    flex-direction: row;
    align-content: flex-start;
    height: 100%;
    gap: var(--padding);
    flex-wrap: wrap;
    box-sizing: border-box;
    padding: var(--padding);
    overflow-y: auto;
    user-select: none;
    flex: 1 1 100px;

}

.selectedItemsHeading {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
}

.selectedItemsHeaderText {
    display: flex;
    align-items: end;
}

#scaleDisplay {
    color: var(--light1);
    font-weight: 100;
    padding-top: calc(var(--padding)/2);
    padding-left: var(--padding);
    padding-right: var(--padding);
    border-top-left-radius: var(--rounding);
    border-top-right-radius: var(--rounding);

    background-color: var(--dark2);
    box-shadow: 0 var(--padding) 0 var(--dark2);
    filter: contrast(1.05);
}

.selectedItemsWrapper {
    display: flex;
    flex-direction: row;
    background-color: var(--dark2);
    padding: var(--padding);
    gap: var(--padding);
    border-radius: var(--rounding);
    overflow-y: auto;
    max-height: 15%;
    box-shadow: inset 0 0 1vw rgba(0, 0, 0, 0.197);
    border-top-right-radius: 0;
}

.selectedItems {
    width: 100%;
    height: auto;
    display: flex;
    flex-direction: row;
    align-content: flex-start;
    justify-content: center;
    gap: var(--padding);
    flex-wrap: wrap;
    box-sizing: border-box;
    transition: 1s;
    user-select: none;
    overflow-y: auto;
    border-radius: var(--rounding);
}



.dragDropItem {
    background-color: var(--light0);
    padding: calc(var(--padding) / 2) var(--padding);
    border-radius: var(--rounding);
    font-weight: 800;
    box-sizing: border-box;
    color: var(--dark2);
    position: relative;
    cursor: pointer;
    transition: 0.02s;
    box-shadow: 0 0 10px #00000056, inset 0 0 3px #ffffff6e;

}

.dragDropItem:hover {
    transform: scale(1.05) rotate(-0.001turn);
    filter: contrast(1.1);
    z-index: 10;

}

.dragDropItem:active {
    transform: scale(0.99);
}

.dragDropItem span {
    position: relative;
    background-color: var(--light2);
    color: var(--dark1);
    border-radius: 0 var(--rounding) var(--rounding) 0;
    margin-left: var(--padding);
    padding: calc(var(--padding) / 2) var(--padding);
    z-index: 2;
    top: 0%;
    left: var(--padding);
    height: 100%;
    box-shadow: 0 0 10px rgb(6, 6, 6);

}

.dragDropItem.dragging {
    transform: scale(1.05);
    transition: 0.2s;
    opacity: 0.5;
    cursor: grabbing;
}

.dragDropItem.over {
    transform: scale(0.95);
    transition: 0.2s;
    opacity: 0.5;
}

.selected-dragDropItem {
    box-shadow: 0 0 10px #00000096;
    /* Add a glowing effect */
    cursor: grab;
}

#DragAndDrop-EmptyMessage {
    opacity: 0.2;
    display: flex;
    gap: var(--padding);
}












@media screen and (orientation: portrait) {
    .searchContainer {
        flex-direction: column;
    }

    .visualPianoContainer {
        flex: 1;
        flex-basis: 100px;
    }

    html {
        font-size: medium;
    }


    :root {
        --padding: 10px;
    }

}

@media only screen and (max-width: 1200px) {
    .content {
        width: 100vw;

    }

    html {
        align-items: baseline;

    }

    :root {
        --padding: 7px;
    }

    .visualIcon {
        width: max(4vh, 3vw);
    }

    .settingsWrapperText {
        display: none;
    }

    .versionInformation {
        display: none;
    }
}

@media screen and (max-height: 800px) {
    .inputWrapper {
        height: 70vh;
    }
}