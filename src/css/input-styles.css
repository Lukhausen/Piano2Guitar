:root {
    --light0: rgb(240, 240, 240);
    --light1: rgb(220, 220, 220);
    --light2: rgb(208, 208, 208);
    --light3: rgb(143, 142, 142);
    --dark0: rgb(67, 76, 76);
    --dark1: rgb(50, 57, 57);
    --dark2: rgb(35, 42, 42);
    --dark3: rgb(10, 20, 20);
    --accent1: rgb(255, 136, 0);
    --padding: 10px;
    --rounding: 7px;
}



/* width */
::-webkit-scrollbar {
    width: 5px;
}

/* Track */
::-webkit-scrollbar-track {
    background: var(--dark3);
}

/* Handle */
::-webkit-scrollbar-thumb {
    background: var(--dark1);
    border-radius: var(--rounding);
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
    background: var(--light3);
}

svg path {
    fill: var(--light1)
}

html {
    background-color: var(--dark3);
    color: #fff;
    font-size: larger;
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: 100vh;
    min-height: 100dvh;
    font-family: "Manrope", sans-serif;
    background: radial-gradient(circle, rgba(7, 24, 27, 1) 0%, rgba(9, 9, 9, 1) 100%);
    background-color: #171f1f;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='70' height='46' viewBox='0 0 70 46'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%23000000' fill-opacity='0.09'%3E%3Cpolygon points='68 44 62 44 62 46 56 46 56 44 52 44 52 46 46 46 46 44 40 44 40 46 38 46 38 44 32 44 32 46 26 46 26 44 22 44 22 46 16 46 16 44 12 44 12 46 6 46 6 44 0 44 0 42 8 42 8 28 6 28 6 0 12 0 12 28 10 28 10 42 18 42 18 28 16 28 16 0 22 0 22 28 20 28 20 42 28 42 28 28 26 28 26 0 32 0 32 28 30 28 30 42 38 42 38 0 40 0 40 42 48 42 48 28 46 28 46 0 52 0 52 28 50 28 50 42 58 42 58 28 56 28 56 0 62 0 62 28 60 28 60 42 68 42 68 0 70 0 70 46 68 46'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
}

.header {
    display: flex;
    justify-content: space-between;
    align-items: end;
    font-size: max(1.6vw, 3vh);
    font-weight: 100;
}

body {
    margin: 0;
    box-shadow: 0 0 10vw rgba(6, 6, 6, 0.552);
    box-sizing: border-box;
    width: 80vw;

    min-height: 500px;
    display: flex;
    flex-direction: column;
}




#settingsIcon {
    z-index: 10;
}

.inputWrapper {
    display: flex;
    flex-direction: column;
    width: 100%;
    height: 50vh;
    background-color: var(--dark1);
    gap: var(--padding);
    padding: var(--padding);
    box-sizing: border-box;
    position: relative;
    box-shadow: 0 0 min(5vw, 5vh) rgba(0, 0, 0, 0.212);
    background-color: #323939;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='4' height='4' viewBox='0 0 4 4'%3E%3Cpath fill='%23575757' fill-opacity='0.4' d='M1 3h1v1H1V3zm2-2h1v1H3V1z'%3E%3C/path%3E%3C/svg%3E");
    border-top-left-radius: var(--rounding);
    border-top-right-radius: var(--rounding);

}


.searchContainer {
    display: flex;
    flex-direction: row;
    gap: var(--padding);
    flex: 1
}



.visualPianoContainer {
    flex: 1.5;
    display: flex;
    flex-direction: row;
    align-items: end;
    padding: calc(var(--padding)/2);
    background-color: var(--dark2);
    border-radius: var(--rounding);
    gap: calc(var(--padding)/2);
    flex-basis: 100px;
    box-shadow: inset 0 0 1vw rgba(0, 0, 0, 0.197);

}

.visualPianoIcon {
    width: max(3vh, 1.5vw);
    height: auto;
    transition: 0.2s;
}

.visualPianoIcon:hover {
    cursor: pointer;
    transform: scale(1.05);
}

.visualPianoIcon:active {
    cursor: pointer;
    transform: scale(0.8);
}

.pianoContainer {
    position: relative;
    display: flex;
    width: 100%;
    height: 100%;
    box-shadow: 0 0 1vw rgba(7, 0, 53, 0.25);
    border: none;
    flex: 1;
    border-radius: var(--rounding);

}

.pianoIconContainer {
    display: flex;
    flex-direction: column;
    gap: var(--padding);
    padding: calc(var(--padding)/2);
    max-height: 100%;
}

.pianoMIDIWrapper {
    display: flex;
    width: 100%;
    height: 100%;
    border: none;
    flex-direction: column;
    gap: calc(var(--padding)/2)
}

#MIDIStatusDiv {
    color: var(--light3);
}

.searchWordContainer {
    flex: 1;
    display: flex;
    position: relative;
    flex-direction: column;
    background-color: var(--dark2);
    border-radius: var(--rounding);
    overflow: hidden;
    /* Hides content that overflows the element's box */


}

.blackFadeBottom {
    width: 100%;
    position: absolute;
    border-radius: var(--rounding);
    background: linear-gradient(0deg, rgb(31, 31, 31) 0%, rgba(63, 63, 63, 0) 10%, rgba(0, 0, 0, 0) 100%);
    z-index: 3;
    pointer-events: none;
    height: 100%;
}

.searchBox {
    width: 100%;
    height: auto;
    background-color: var(--dark2);
    box-sizing: border-box;
    border: none;
    border-bottom: 2px solid var(--dark1);
    /* Same bottom border on focus */
    padding: var(--padding);
    /* Padding around text */
    border-radius: var(--rounding) var(--rounding) 0 0;
    color: var(--light1);
}



.searchBox:focus {
    outline: none;
}

.searchChordList {
    display: flex;
    flex-direction: row;
    align-content: flex-start;
    height: 100%;
    gap: var(--padding);
    flex-wrap: wrap;
    box-sizing: border-box;
    padding: var(--padding);
    overflow-y: auto;
    user-select: none;
    flex: 1 1 100px;

}

.selectedItemsHeading {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
}

#scaleDisplay {
    color: var(--light1);
    font-weight: 100;
    padding-top: calc(var(--padding)/2);
    padding-left: var(--padding);
    padding-right: var(--padding);
    border-top-left-radius: var(--rounding);
    border-top-right-radius: var(--rounding);

    background-color: var(--dark2);
    box-shadow: 0 var(--padding) 0 var(--dark2);
    filter: contrast(1.05);
}

.selectedItemsWrapper {
    display: flex;
    flex-direction: row;
    background-color: var(--dark2);
    padding: var(--padding);
    gap: var(--padding);
    border-radius: var(--rounding);
    overflow-y: auto;
    max-height: 15%;
    box-shadow: inset 0 0 1vw rgba(0, 0, 0, 0.197);
    border-top-right-radius: 0;
}

.selectedItems {
    width: 100%;
    height: auto;
    display: flex;
    flex-direction: row;
    align-content: flex-start;
    justify-content: center;
    gap: var(--padding);
    flex-wrap: wrap;
    box-sizing: border-box;
    transition: 1s;
    user-select: none;
    overflow-y: auto;
    border-radius: var(--rounding);
}



.dragDropItem {
    background-color: var(--light0);
    padding: calc(var(--padding) / 2) var(--padding);
    border-radius: var(--rounding);
    font-weight: 800;
    box-sizing: border-box;
    color: var(--dark2);
    position: relative;
    cursor: pointer;
    transition: 0.02s;
    box-shadow: 0 0 10px #00000056, inset 0 0 3px #ffffff6e;

}

.dragDropItem:hover {
    transform: scale(1.05) rotate(-0.001turn);
    filter: contrast(1.1);
    z-index: 10;

}

.dragDropItem:active {
    transform: scale(0.99);
}

.dragDropItem span {
    position: relative;
    background-color: var(--light2);
    color: var(--dark1);
    border-radius: 0 var(--rounding) var(--rounding) 0;
    margin-left: var(--padding);
    padding: calc(var(--padding) / 2) var(--padding);
    z-index: 2;
    top: 0%;
    left: var(--padding);
    height: 100%;
    box-shadow: 0 0 10px rgb(6, 6, 6);

}

.dragDropItem.dragging {
    transform: scale(1.05);
    transition: 0.2s;
    opacity: 0.5;
    cursor: grabbing;
}

.dragDropItem.over {
    transform: scale(0.95);
    transition: 0.2s;
    opacity: 0.5;
}

.selected-dragDropItem {
    box-shadow: 0 0 10px #00000096;
    /* Add a glowing effect */
    cursor: grab;
}

#DragAndDrop-EmptyMessage {
    opacity: 0.2;
    display: flex;
    gap: var(--padding);
}












@media screen and (orientation: portrait) {
    .searchContainer {
        flex-direction: column;
    }

    .visualPianoContainer {
        flex: 1;
        flex-basis: 100px;
    }

    html {
        font-size: medium;
    }


    :root {
        --padding: 10px;
    }

}

@media only screen and (max-width: 1200px) {
    body {
        width: 100vw;

    }

    html {
        align-items: baseline;

    }

    :root {
        --padding: 7px;
    }

    .visualPianoIcon {
        width: max(3vh, 3vw);
    }
}

@media screen and (max-height: 800px) {
    .inputWrapper{
        height: 70vh;
    }
}